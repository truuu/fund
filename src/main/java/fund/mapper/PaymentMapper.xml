<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
             
<mapper namespace="fund.mapper.PaymentMapper">

<sql id="select1">
  SELECT p.*,
    co.name corporateName, og.codeName organizationName, dp.name donationPurposeName, me.codeName paymentMethodName,
    c.commitmentNo, c.accountNo, c.accountHolder,
    bk.codeName bankName
  FROM payment p
    LEFT JOIN code me ON me.id = p.paymentMethodId 
    LEFT JOIN donationPurpose dp ON p.donationPurposeId = dp.id
    LEFT JOIN code og ON og.id = dp.organizationId 
    LEFT JOIN corporate co ON dp.corporateId = co.id
    LEFT JOIN commitment c ON p.commitmentId = c.id
    LEFT JOIN code bk ON bk.id = c.bankId
</sql>

<select id="selectById" resultType="fund.dto.Payment">
  <include refid="select1"></include>
  WHERE p.id = #{id}
</select>

<select id="selectPaymentList1" resultType="fund.dto.Payment">
  <include refid="select1"></include>
  WHERE p.sponsorId = #{sponsorId}
  AND me.codeGroupId = 3
  ORDER BY ${orderBy}
</select>

<select id="selectPaymentList1a" resultType="fund.dto.Payment">
  <include refid="select1"></include>
  WHERE p.commitmentId = #{commitmentId}
  ORDER BY p.paymentDate
</select>

<select id="selectPaymentList2" resultType="fund.dto.Payment">
  <include refid="select1"></include>
  WHERE p.sponsorId = #{sponsorId}
  AND me.codeGroupId = 4
  ORDER BY p.paymentDate
</select>

<update id="update">    
  <![CDATA[
  UPDATE Payment
    SET 
      receiptId = #{receiptId},
      amount = #{amount}, 
      paymentDate = #{paymentDate}, 
      donationPurposeId = #{donationPurposeId}, 
      paymentMethodId = #{paymentMethodId},
      etc = #{etc}
  FROM Payment
  WHERE id = #{id}
  ]]>
</update>

<delete id="delete">
  DELETE FROM Payment WHERE id = #{id}
</delete>

<insert id="insert" useGeneratedKeys="true" keyProperty="id">
  INSERT payment(sponsorId, commitmentId, amount, paymentDate, etc, receiptId, donationPurposeId, paymentMethodId)
  VALUES (#{sponsorId}, #{commitmentId}, #{amount}, #{paymentDate}, #{etc}, #{receiptId}, #{donationPurposeId}, #{paymentMethodId})
</insert>

<select id="selectForReceiptCreation" resultType="fund.dto.Payment">
DECLARE @srchText NVARCHAR(50), @startDate DATE, @endDate DATE, @corporateId INT
SET @srchText = #{srchText}
SET @startDate = #{startDate}
SET @endDate = #{endDate}
SET @corporateId = #{corporateId}
SELECT p.*, s.sponsorNo, s.name, r.[no] 'receiptNo'
FROM Payment p 
  LEFT JOIN Sponsor s ON p.sponsorId = s.id 
  LEFT JOIN Receipt r ON p.receiptId = r.id
WHERE p.paymentDate BETWEEN @startDate AND @endDate
AND p.sponsorId IN (SELECT id FROM [sponsor] WHERE name = @srchText)
AND p.donationPurposeId IN (SELECT id FROM donationPurpose WHERE @corporateId = 0 OR corporateId = @corporateId)
ORDER BY p.paymentDate DESC
</select> 
    
<select id="selectByReceiptId" resultType="fund.dto.Payment">
  SELECT * FROM payment WHERE receiptId = #{receiptId}
</select>


    
    

	
	<select id="selectDistinctSponsorID" resultType="Integer">
		SELECT DISTINCT sponsorId
		FROM [Payment] p JOIN [donationPurpose] d ON p.donationPurposeId = d.id
		WHERE p.paymentDate BETWEEN #{startDate} AND #{endDate}
			AND d.corporateId = #{corporateId}
			AND p.receiptID IS NULL
	</select>
	
    <select id="selectReceiptByName" resultType="fund.dto.Payment">
		SELECT p.*,s.sponsorNo, s.name, r.[no] 'rctNo'
		FROM [Payment] p LEFT JOIN [Sponsor] s ON p.sponsorId = s.id 
					LEFT JOIN [Receipt] r ON p.receiptID = r.id
		WHERE p.paymentDate BETWEEN #{startDate} AND #{endDate}
					AND p.sponsorId IN ( SELECT id FROM [sponsor] WHERE name=#{srchText} )
					AND p.donationPurposeId IN ( SELECT id FROM [donationPurpose] WHERE #{corporateId}=0 OR corporateId = #{corporateId} )
	</select> 
	
	<select id="selectPage" resultType="fund.dto.Payment">
		<![CDATA[
			SELECT *
			FROM
				( SELECT p.*,s.juminNo,s.name,
								ROW_NUMBER() OVER (ORDER BY p.id DESC) 행번호
				   FROM [Payment] p LEFT JOIN [Sponsor] s ON p.sponsorId = s.id
				   			  LEFT JOIN [donationPurpose] d ON p.donationPurposeId = d.id 
				   WHERE
				   		 LEN(juminNo)=13 AND
				   		 p.receiptID IS NOT NULL AND
				   		( d.corporateId = #{corporateId} OR #{corporateId}=0 ) AND
				   		(( #{startDate} IS NULL AND #{endDate} IS NULL) OR (p.paymentDate BETWEEN #{startDate} AND #{endDate}))
				) subquery
			WHERE 행번호 >(#{currentPage} -1) * #{pageSize} AND
						행번호 <= #{currentPage} * #{pageSize}
			ORDER BY 행번호
		]]>
	</select>
	
	<select id="selectCount" resultType="int">
		SELECT COUNT(*)
		FROM [Payment] p LEFT JOIN [Sponsor] s ON p.sponsorId = s.id
				LEFT JOIN [donationPurpose] d ON p.donationPurposeId = d.id 
		WHERE
				   LEN(juminNo)=13 AND 
				   p.receiptID IS NOT NULL AND
				   ( d.corporateId = #{corporateId} OR #{corporateId}=0 ) AND
				   (( #{startDate} IS NULL AND #{endDate} IS NULL) OR (p.paymentDate BETWEEN #{startDate} AND #{endDate}))
	</select>
	
	<select id="selectTaxData" resultType="fund.dto.Payment">
		SELECT p.paymentDate,p.amount, s.juminNo,s.name
		FROM [Payment] p LEFT JOIN [Sponsor] s ON p.sponsorId = s.id
				LEFT JOIN [donationPurpose] d ON p.donationPurposeId = d.id 
		WHERE
				   LEN(juminNo)=13 AND 
				   p.receiptID IS NOT NULL AND
				   ( d.corporateId = #{corporateId} OR #{corporateId}=0 ) AND
				   (( #{startDate} IS NULL AND #{endDate} IS NULL) OR (p.paymentDate BETWEEN #{startDate} AND #{endDate}))
	</select>

	<update id="issueReceiptByDur">
		UPDATE [Payment]
		SET receiptID = #{receiptID}
		FROM [Payment] p JOIN [donationPurpose] d ON p.donationPurposeId = d.id
		WHERE p.paymentDate BETWEEN #{startDate} AND #{endDate}
			AND d.corporateId = #{corporateId}
			AND p.receiptID IS NULL
			AND p.sponsorId = #{sponsorId}
	</update>
	
	<update id="deleteReceiptByReceiptID">
		UPDATE [Payment]
		SET receiptID = NULL
		WHERE receiptID=#{id}
	</update>

	<select id="selectComparePaymentDate" resultType="fund.dto.Payment">
		select (select
		name from donationPurpose where
		donationPurpose.id=payment.donationPurposeId) AS donationPurpose,
		count(distinct sponsorId) AS count1,
		count(*) AS count2,
		sum(CAST(
		amount AS BIGINT )) AS sum
		from [donationPurpose] join [payment] on
		donationPurpose.id=payment.donationPurposeId
		where paymentDate between
		#{startDate} and #{endDate}
		group by donationPurposeId

	</select>

	<select id="selectPaymentRecord" resultType="fund.dto.Payment">
		
		
		select p.paymentDate,p.amount, s.name, s.sponsorNo, d.name
		"donationPurpose",
		c1.codeName "sponsorType2",c2.codeName "church",
		(case when p.commitmentId is not NULL then '정기' else '비정기' end) "gubun",
		c3.codeName "paymentMethod"

		from Payment p join Sponsor s on
		p.sponsorId=s.id join Code c1 on
		s.sponsorType2Id=c1.id join
		DonationPurpose d on d.id=p.donationPurposeId join Code c2 on
		s.churchID=c2.id
		join Code c3 on p.paymentMethodId=c3.id

		where
		paymentDate between #{startDate} and #{endDate}
		
		<if test="srchType1 == 1">
			and p.commitmentId is not null
		</if>
		<if test="srchType1 == 2">
			and p.commitmentId is null
		</if>
		<if test="srchType2 != null">and p.donationPurposeId = #{srchType2}</if>
		
		<if test="srchType3 != 0">and s.churchID = #{srchType3}</if>
		
		<if test="srchType4 != 0">and p.paymentMethodId = #{srchType4}</if>
		
		<if test="srchType5 != 0">and s.sponsorType2Id = #{srchType5}</if>
		
		<if test="sponsorName != null and sponsorName !=''">and s.name = #{sponsorName}</if>
		
		
	</select>

	<select id="selectPaymentTotal" resultType="fund.dto.Payment">
		select distinct s.sponsorNo, COUNT(*) "totalCount", SUM(amount)
		"totalSum",s.name,
		c1.codeName "sponsorType2",c2.codeName "church"
		from
		Payment p join Sponsor s on p.sponsorId=s.id join Code c1 on
		s.sponsorType2Id=c1.id
		join DonationPurpose d on
		d.id=p.donationPurposeId join Code c2 on
		s.churchID=c2.id
		join Code c3
		on p.paymentMethodId=c3.id

		WHERE paymentDate between #{startDate} and #{endDate}
		
		<if test="srchType1!=0 and srchType1==1">
			and p.commitmentId is not null
		</if>
		<if test="srchType1!=0 and srchType1==2">
			and p.commitmentId is null
		</if>
		
		<if test="srchType2 != null">and p.donationPurposeId = #{srchType2}</if>
		
		<if test="srchType3 != 0">and s.churchID = #{srchType3}</if>
		
		<if test="srchType4 != 0">and p.paymentMethodId = #{srchType4}</if>
		
		<if test="srchType5 != 0">and s.sponsorType2Id = #{srchType5}</if>
		
		<if test="sponsorName != null and sponsorName !=''">and s.name = #{sponsorName}</if>
		
		group by s.sponsorNo, s.name, c1.codeName, c2.codeName
		
	</select>

	<select id="selectByPayment" resultType="fund.dto.Payment">
	<![CDATA[
        SELECT s.sponsorNo,s.name,c1.codeName, p.paymentDate,p.etc,c.name, ISNULL(p.commitmentId,0)
        FROM [Payment] p LEFT JOIN [Sponsor] s ON p.sponsorId = s.id
        			LEFT JOIN [DonationPurpose] d ON p.donationPurposeId = d.id
        			LEFT JOIN [Corporate] c ON d.corporateId = c.id 
        			LEFT JOIN [Code] c1 ON c1.id=s.sponsorType2Id
        			LEFT JOIN [Code] c2 ON c2.id=s.churchID
        WHERE s.sponsorType2Id=#{sponsorType2Id}
                   AND p.paymentDate >= #{date1} AND p.paymentDate < #{date2} 
                   AND s.churchID=#{churchID} AND p.donationPurposeId=#{donationPurposeId}
                   AND s.sponsorNo=#{sponsorNo} AND c.id=#{corporateId}                  
	 ]]>
	</select>


	<select id="selectByPaymentAll" resultType="fund.dto.Payment">
<![CDATA[
  	select s.name,s.sponsorNo,c.codeName, count(*),SUM(amount), ISNULL(p.commitmentId,0)
	from payment p left join sponsor s
	on p.sponsorId=s.id left join code c on c.id=s.churchID
 	group by s.name,s.sponsorNo,c.codeName,p.commitmentId
 	
     WHERE p.commitmentId=#{commitmentId} AND s.sponsorType2Id=#{sponsorType2Id}
                   AND p.paymentDate >= #{date1} AND p.paymentDate < #{date2} 
                   AND s.churchID=#{churchID} AND p.donationPurposeId=#{donationPurposeId}
                   AND s.sponsorNo=#{sponsorNo} AND c.id=#{corporateId}
                   
 ]]>
	</select>

	<select id="selectBySponsorType2" resultType="fund.dto.Payment">
		select distinct
		c.codeName '후원인구분',count(DISTINCT sponsorId) '기부후원인수',
		COUNT(*)
		'출연수',sum(p.amount) '납입액'
		from payment p join sponsor s
		on
		p.sponsorId=s.id join code c on s.sponsorType2Id=c.id
		where
		c.codeGroup='후원인구분2'
		group by c.codeName
		with cube
		ORDER BY sum(p.amount)
		DESC
	</select>

	<select id="selectByDonationPurpose" resultType="fund.dto.Payment">
		select distinct
		d.name '기부목적',count(DISTINCT sponsorId) '기부후원인수', COUNT(*)
		'납입수',sum(p.amount) '납입액'
		from payment p join donationPurpose d
		on
		p.donationPurposeId=d.id
		group by d.name
		with cube
		ORDER BY sum(p.amount)
		DESC
	</select>

    <select id="selectEB21success" resultType="fund.dto.Payment">
    	select c.sponsorId,c.id commitmentId,e.paymentDate,c.donationPurposeId,c.paymentMethodId,cd.amountPerMonth
		from EB21_commitmentDetail eb
		JOIN commitmentDetail cd
		ON eb.commitmentDetailID=cd.id
		JOIN commitment c
		ON cd.commitmentId=c.id
		JOIN EB21 e ON e.id=eb.EB21ID
		where eb.state='성공'
    </select>
	
	<insert id="insertEB21Payment" useGeneratedKeys="true" keyProperty="id">
		insert into payment
		(sponsorId,commitmentId,amount,paymentDate,donationPurposeId,paymentMethodId)
		values(#{sponsorId},#{commitmentId},#{amountPerMonth},#{paymentDate},#{donationPurposeId},#{paymentMethodId})
	</insert>
	
	<insert id="insertSalaryResult" useGeneratedKeys="true" keyProperty="id">
		insert into payment(sponsorId,commitmentId,amount,paymentDate,donationPurposeId,paymentMethodId)
		values(#{sponsorId},#{commitmentId},#{amount},#{paymentDate},#{donationPurposeId},#{paymentMethodId})
	</insert>
	
	<insert id="insertIrregularPayment" useGeneratedKeys="true" keyProperty="id">
		insert into payment(sponsorId,amount,paymentDate,donationPurposeId,paymentMethodId,etc)
		values(#{sponsorId},#{amount},#{paymentDate},#{donationPurposeId},#{paymentMethodId},#{etc})
	</insert>
	
	

	
	<select id="selectIrregular" resultType="fund.dto.Payment">
		select p.id,p.amount,p.paymentDate as paymentDateString,p.donationPurposeId,p.paymentMethodId,p.sponsorId,p.etc,
		co.name as corporate,dp.name as donationPurpose,code.codeName as paymentMethod
		from payment p
		JOIN code ON code.id=p.paymentMethodId
		JOIN codeGroup ON codeGroup.id=4 AND code.codeGroupId=codeGroup.id
		JOIN donationPurpose dp ON p.donationPurposeId=dp.id
		JOIN corporate co ON dp.corporateId=co.id
		where p.id=#{id}
	</select>
	
	<select id="selectMonthDonationPurposePayment" resultType="fund.dto.PaymentSummary1">

	select isnull(corporate, '합계') corporate, isnull(organization, '합계') organization, isnull(donationPurpose, '합계') donationPurpose,
	m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12
	from
	(
		select corporate, organization, donationPurpose, sum([1]) m1, sum([2]) m2, sum([3]) m3, sum([4]) m4, sum([5]) m5, sum([6]) m6, 
												 sum([7]) m7, sum([8]) m8, sum([9]) m9, sum([10]) m10, sum([11]) m11, sum([12]) m12
		from
		(
			select *
			from 
				(select c.name "corporate",
					(select codeName from code where ID = d.organizationId) organization,
					(select name from donationPurpose where ID = d.id) donationPurpose,
					month(p.paymentDate) 월, p.amount 금액
				from payment p join donationPurpose d 
					on p.donationPurposeId = d.id join corporate c on c.id=d.corporateId
				where p.paymentDate between #{startDate} and #{endDate}
			) t
			pivot
			(   sum(금액)
				for 월 in ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12])
			) as t
		) t
		group by rollup(corporate, organization, donationPurpose)
	) t
	</select>
	
	

</mapper>
