<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fund.mapper.ReportMapper">

<select id="selectReport1a" resultType="hashmap">
DECLARE @regular INT, @churchId INT, @startDate DATE, @endDate DATE, @paymentMethodId INT, @donationPurposeId INT, 
  @sponsorType2Id INT, @sponsorName NVARCHAR(50), @sponsorNo VARCHAR(50), @corporateId INT
SET @regular = #{regular}
SET @churchId = #{churchId}
SET @startDate = #{startDate}
SET @endDate = #{endDate}
SET @paymentMethodId = #{paymentMethodId}
SET @donationPurposeId = #{donationPurposeId}
SET @sponsorType2Id = #{sponsorType2Id}
SET @sponsorName = #{sponsorName}
SET @sponsorNo = #{sponsorNo}
SET @corporateId = #{corporateId}

SELECT s.sponsorNo, s.name, 
  (SELECT codeName FROM code c WHERE c.id = s.sponsorType2Id) sponsorType2Name,
  (SELECT codeName FROM code c WHERE c.id = s.churchId) churchName,
  (CASE WHEN p.commitmentId IS NULL THEN '비정기' ELSE '정기' END) regular,
  (SELECT codeName FROM code c WHERE c.id = p.paymentMethodId) paymentMethodName,
  p.paymentDate, p.amount, c.id commitmentId, d.name donationPurposeName
FROM payment p 
  LEFT JOIN commitment c ON c.id = p.commitmentId
  LEFT JOIN sponsor s ON s.id = p.sponsorId
  LEFT JOIN donationPurpose d ON d.id = p.donationPurposeId
WHERE 
  (@regular IS NULL OR @regular = -1 OR (@regular = 1 AND p.commitmentId IS NOT NULL) OR (@regular = 0 AND p.commitmentId IS NULL))
AND (@churchId IS NULL OR @churchId = '' OR @churchId = s.churchId)
AND (@startDate IS NULL OR @startDate = '' OR p.paymentDate BETWEEN @startDate AND @endDate)
AND (@paymentMethodId IS NULL OR @paymentMethodId = '' OR @paymentMethodId = p.paymentMethodId)
AND (@donationPurposeId IS NULL OR @donationPurposeId = '' OR @donationPurposeId = p.donationPurposeId)
AND (@sponsorType2Id IS NULL OR @sponsorType2Id = '' OR @sponsorType2Id = s.sponsorType2Id)
AND (@sponsorName IS NULL OR @sponsorName = '' OR @sponsorName = s.name)
AND (@sponsorNo IS NULL OR @sponsorNo = '' OR @sponsorNo = s.sponsorNo)
AND (@corporateId IS NULL OR @corporateId = '' OR @corporateId = d.corporateId)
${ orderBy }
</select>

<select id="selectReport1b" resultType="hashmap">
DECLARE @regular INT, @churchId INT, @startDate DATE, @endDate DATE, @paymentMethodId INT, @donationPurposeId INT, 
  @sponsorType2Id INT, @sponsorName NVARCHAR(50), @sponsorNo VARCHAR(50), @corporateId INT
SET @regular = #{regular}
SET @churchId = #{churchId}
SET @startDate = #{startDate}
SET @endDate = #{endDate}
SET @paymentMethodId = #{paymentMethodId}
SET @donationPurposeId = #{donationPurposeId}
SET @sponsorType2Id = #{sponsorType2Id}
SET @sponsorName = #{sponsorName}
SET @sponsorNo = #{sponsorNo}
SET @corporateId = #{corporateId}

SELECT t.*, s.sponsorNo, s.name,
  (SELECT codeName FROM code c WHERE c.id = s.sponsorType2Id) sponsorType2Name,
  (SELECT codeName FROM code c WHERE c.id = s.churchId) churchName
FROM 
( SELECT s.id, SUM(p.amount) amount, COUNT(p.id) [count]
  FROM payment p 
    LEFT JOIN sponsor s ON s.id = p.sponsorId
    LEFT JOIN donationPurpose d ON d.id = p.donationPurposeId
  WHERE 
    (@regular IS NULL OR @regular = -1 OR (@regular = 1 AND p.commitmentId IS NOT NULL) OR (@regular = 0 AND p.commitmentId IS NULL))
  AND (@churchId IS NULL OR @churchId = '' OR @churchId = s.churchId)
  AND (@startDate IS NULL OR @startDate = '' OR p.paymentDate BETWEEN @startDate AND @endDate)
  AND (@paymentMethodId IS NULL OR @paymentMethodId = '' OR @paymentMethodId = p.paymentMethodId)
  AND (@donationPurposeId IS NULL OR @donationPurposeId = '' OR @donationPurposeId = p.donationPurposeId)
  AND (@sponsorType2Id IS NULL OR @sponsorType2Id = '' OR @sponsorType2Id = s.sponsorType2Id)
  AND (@sponsorName IS NULL OR @sponsorName = '' OR @sponsorName = s.name)
  AND (@sponsorNo IS NULL OR @sponsorNo = '' OR @sponsorNo = s.sponsorNo)
  AND (@corporateId IS NULL OR @corporateId = '' OR @corporateId = d.corporateId)
  GROUP BY s.id
) t
  LEFT JOIN sponsor s ON s.id = t.id
${ orderBy }  
</select>

<select id="selectReport2a" resultType="hashmap">
DECLARE @startDate DATE, @endDate DATE, @sum INT
SET @startDate = #{startDate}
SET @endDate = #{endDate}
SET @sum = (SELECT SUM(amount) FROM payment WHERE paymentDate BETWEEN @startDate AND @endDate)

SELECT donationPurposeId, c.name +' '+ o.codeName +' '+ d.name name, 
  amount, sponsorCount, paymentCount, (amount * 100.0 / @sum) ratio
FROM (
  SELECT donationPurposeId, SUM(amount) amount, COUNT(DISTINCT sponsorId) sponsorCount, COUNT(DISTINCT id) paymentCount
  FROM payment
  WHERE paymentDate BETWEEN @startDate AND @endDate
  GROUP BY donationPurposeId
) t
  LEFT JOIN donationPurpose d ON t.donationPurposeId = d.id 
  LEFT JOIN corporate c ON c.id = d.corporateId
  LEFT JOIN code o ON o.id = d.organizationId

UNION ALL
SELECT 999999999 donationPurposeId, '합계' name, 
  SUM(amount) amount, COUNT(DISTINCT sponsorId) sponsorCount, COUNT(*) paymentCount, 100.0 ratio
FROM payment 
WHERE paymentDate BETWEEN @startDate AND @endDate

ORDER BY donationPurposeId
</select>

<select id="selectReport2b" resultType="hashmap">
DECLARE @startDate DATE, @endDate DATE, @sum INT
SET @startDate = #{startDate}
SET @endDate = #{endDate}
SET @sum = (SELECT SUM(amount) FROM payment WHERE paymentDate BETWEEN @startDate AND @endDate)

SELECT sponsorType2Id, c.codeName name, 
  amount, sponsorCount, paymentCount, (amount * 100.0 / @sum) ratio
FROM (
  SELECT sponsorType2Id, SUM(amount) amount, COUNT(DISTINCT sponsorId) sponsorCount, COUNT(DISTINCT p.id) paymentCount
  FROM payment p LEFT JOIN sponsor s ON s.id = p.sponsorId
  WHERE paymentDate BETWEEN @startDate AND @endDate
  GROUP BY s.sponsorType2Id
) t
  LEFT JOIN code c ON c.id = t.sponsorType2Id

UNION ALL
SELECT 999999999 sponsorType2Id, '합계' name,
  SUM(amount) amount, COUNT(DISTINCT sponsorId) sponsorCount, COUNT(*) paymentCount, 100.0 ratio
FROM payment 
WHERE paymentDate BETWEEN @startDate AND @endDate

ORDER BY sponsorType2Id
</select>

<select id="selectReport2c" resultType="hashmap">
DECLARE @startDate DATE, @endDate DATE, @sum INT
SET @startDate = #{startDate}
SET @endDate = #{endDate}
SET @sum = (SELECT SUM(amount) FROM payment p LEFT JOIN sponsor s ON s.id = p.sponsorId
  WHERE paymentDate BETWEEN @startDate AND @endDate AND s.churchId IS NOT NULL)

SELECT churchId, c.codeName name, 
  amount, sponsorCount, paymentCount, (amount * 100.0 / @sum) ratio
FROM (
  SELECT churchId, SUM(amount) amount, COUNT(DISTINCT sponsorId) sponsorCount, COUNT(DISTINCT p.id) paymentCount
  FROM payment p LEFT JOIN sponsor s ON s.id = p.sponsorId
  WHERE paymentDate BETWEEN @startDate AND @endDate
  AND s.churchId IS NOT NULL
  GROUP BY s.churchId
) t
  LEFT JOIN code c ON c.id = t.churchId

UNION ALL
SELECT 999999999 churchId, '합계' name,
  SUM(amount) amount, COUNT(DISTINCT sponsorId) sponsorCount, COUNT(*) paymentCount, 100.0 ratio
FROM payment p LEFT JOIN sponsor s ON s.id = p.sponsorId
WHERE paymentDate BETWEEN @startDate AND @endDate
AND s.churchId IS NOT NULL

ORDER BY churchId
</select>
</mapper>
